1. Improve stroking, particularly where Tiller-Hanson breaks down.
2. Add elliptical arcs to supported path segments
3. Add circular/elliptical contours perhaps before completing 2, though it would be simpler to specify a 
   circle/ellipse by its center rather than a point on its boundary, might be best to keep these as a separate
   contour because they are so simple
4. Write functions to generate paths out of primitives.
   E.g. makeRoundRect Stuff -> Contour
5. Make PathBuilder a Writer monad, so that we can use do notation to write paths, would be *super* elegent 
   to use.
6. Create composite objects out of contours and 
7. Refactor the Path/Contour/ClosedPath abstraction. 
   ClosedPath isn't a great abstraction. Also it would be great to provide a more unified interface to 
   Path/Contours. It's nice to have a type level distinction between the concepts, but they also behave very 
   similarly to most things
8. Fix font loading. Either edit FontyFruity to fix loading of certain fonts. Possibly the issue is properly
   checking flags for on/off curve points.
   Or write my own ttf loader. I will probably eventually write a ttf loader, since I will also want an otf
   loader.
9. Improve Rasterization to only rasterize an object within its bounding box. 
10. Improve small scale rasterization (i.e. for fonts at low pixel sizes)
11. Implement more operations on paths and contours, e.g. rotation of contours
12. Add biarcs, biarc fitting to types of paths? They're apparently a *lot* simpler for a lot of things,
    in particular offset curves of biarc curves are biarc curves. Also this would be simple
    after completing 2,3
13. Deal with cusps properly. Probably subdivide, figure out how to get tangents and normals at cusps, and 
    then cap the resulting join (if the tangents are antiparallel ofc). I suppose we could have a sharp point
    that isn't a cusp. (Do math xD)
